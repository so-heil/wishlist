apiVersion: v1
kind: Namespace
metadata:
  name: wish

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-data
  namespace: wish
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres
  namespace: wish
spec:
  serviceName: postgres-svc
  selector:
    matchLabels:
      app: postgres
  replicas: 1
  template:
    metadata:
      labels:
        app: postgres
    spec:
      terminationGracePeriodSeconds: 60
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: postgres-data
        - name: config
          configMap:
            name: pghbaconf
            items:
              - key: "pg_hba.conf"
                path: "pg_hba.conf"
      containers:
        - name: postgres
          image: postgres:16.1
          volumeMounts:
            - name: data
              mountPath: /var/lib/postgresql/data
            - name: config
              readOnly: false
              mountPath: "/etc/pg_hba.conf"
              subPath: "pg_hba.conf"
          args: ['-c', 'hba_file=/etc/pg_hba.conf']
          resources:
            requests:
              cpu: 100m
            limits:
              cpu: 2000m
          env:
            - name: POSTGRES_PASSWORD
              value: postgres
          ports:
            - name: postgres
              containerPort: 5432
              hostPort: 5432
          livenessProbe:
            exec:
              command:
                - pg_isready
                - -h
                - localhost
                - -U
                - postgres
            initialDelaySeconds: 30
            timeoutSeconds: 5
          readinessProbe:
            exec:
              command:
                - pg_isready
                - -h
                - localhost
                - -U
                - postgres
            initialDelaySeconds: 5
            timeoutSeconds: 1

---
apiVersion: v1
kind: Service
metadata:
  name: postgres-svc
  namespace: wish
spec:
  type: ClusterIP
  selector:
    app: postgres
  ports:
    - name: postgres
      port: 5432
      targetPort: postgres

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: pghbaconf
  namespace: wish
data:
  pg_hba.conf: |
    local   all             all                                     trust
    # IPv4 local connections:
    host    all             all             0.0.0.0/0               trust
    # IPv6 local connections:
    host    all             all             ::1/128                 trust
    # Allow replication connections from localhost, by a user with the
    # replication privilege.
    local   replication     all                                     trust
    host    replication     all             0.0.0.0/0               trust
    host    replication     all             ::1/128                 trust
